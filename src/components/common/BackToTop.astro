---

---
<button
  id="back-to-top-button"
  role="button"
  tabindex="0"
  aria-label="Back to Top"
  aria-hidden="true"
  class="fixed bottom-4 right-4 z-50 p-3 bg-primary text-white rounded-full shadow-lg transition-opacity duration-300 ease-in-out hidden focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-primary"
>
  <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24">
    <path stroke-linecap="round" stroke-linejoin="round" d="M5 15l7-7 7 7" />
  </svg>
</button>

<script>
// @ts-nocheck
const SCROLL_THRESHOLD = 100;
const BOTTOM_MARGIN = '1rem';
const HIDDEN_CLASS = 'hidden';

document.addEventListener('DOMContentLoaded', () => {
  const button = document.getElementById('back-to-top-button');
  if (!button) return;

  function toggleVisibility() {
    const show = window.pageYOffset > SCROLL_THRESHOLD;
    button.classList.toggle(HIDDEN_CLASS, !show);
    button.setAttribute('aria-hidden', String(!show));
  }

  function observeFooter() {
    const footer = document.querySelector('footer');
    if (!footer) return;
    new IntersectionObserver(entries => {
      entries.forEach(entry => {
        button.style.bottom = entry.isIntersecting
          ? (entry.boundingClientRect.height + 16) + 'px'
          : BOTTOM_MARGIN;
      });
    }, { threshold: 0 }).observe(footer);
  }

  function scrollToTop() {
    window.scrollTo({ top: 0, behavior: 'smooth' });
  }

  function onKeyDown(e) {
    if ((e.key === 'Enter' || e.key === ' ') && !button.classList.contains(HIDDEN_CLASS)) {
      e.preventDefault();
      scrollToTop();
    }
  }

  window.addEventListener('scroll', toggleVisibility, { passive: true });
  window.addEventListener('resize', toggleVisibility);
  button.addEventListener('click', scrollToTop);
  button.addEventListener('keydown', onKeyDown);

  observeFooter();
  toggleVisibility();
});
</script>
