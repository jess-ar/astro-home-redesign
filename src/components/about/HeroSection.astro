<section
  class="relative h-screen flex items-center justify-center overflow-hidden bg-fixed bg-center bg-cover"
>
  <div
    class="absolute inset-0 bg-gradient-to-br from-primary/80 to-secondary/80"
  >
  </div>

  <div class="relative z-20 text-center px-2 md:px-14 xl:px-52">
    <h1
      class="text-4xl sm:text-5xl md:text-6xl lg:text-7xl font-extrabold text-white mb-6"
    >
    <span id="typing" class="border-r-4 border-white" aria-live="polite"></span>
    </h1>
    <p class="text-lg sm:text-xl text-white/80 mb-8 max-w-2xl mx-auto">
      The tailor-made email marketing platform designed to empower marketing
      professionals.
    </p>
    <a
      href="#intro"
      class="inline-block px-8 py-3 bg-white text-gray-900 font-semibold rounded-full shadow-md shadow-blue-500/20 hover:shadow-lg hover:shadow-blue-500/30 transition-shadow duration-200"
    >
    Learn more about us
    </a>
  </div>

  <div class="absolute inset-0 z-10 pointer-events-none">
    <canvas id="dotsCanvas" class="w-full h-full" aria-hidden="true" role="presentation"></canvas>
  </div>

  <div class="absolute bottom-0 left-0 right-0 h-3 bg-secondary z-30"></div>

  <script is="client">
    const phrases = [
      "Pioneering to be different…",
      "executing game changing success…",
      "powerful in our approach…",
      "sublime in delivery...",
      "powered by creativity, technology and expertise",
    ];
    const el = document.getElementById("typing");
    let phraseIndex = 0;
    let charIndex = 0;
    function type() {
      const current = phrases[phraseIndex];
      if (charIndex <= current.length) {
        el.textContent = current.substring(0, charIndex);
        charIndex++;
        setTimeout(type, 100);
      } else {
        setTimeout(() => {
          el.textContent = "";
          charIndex = 0;
          phraseIndex = (phraseIndex + 1) % phrases.length;
          type();
        }, 2000);
      }
    }
    type();

    // Random Dot Canvas
    const canvas = document.getElementById("dotsCanvas");
    const ctx = canvas.getContext("2d");
    function resize() {
      canvas.width = innerWidth;
      canvas.height = innerHeight;
    }
    window.addEventListener("resize", resize);
    resize();
    const dots = Array.from({ length: 100 }, () => ({
      x: Math.random() * canvas.width,
      y: Math.random() * canvas.height,
      r: Math.random() * 2 + 1,
    }));
    function draw() {
      ctx.clearRect(0, 0, canvas.width, canvas.height);
      ctx.fillStyle = "rgba(255,255,255,0.2)";
      dots.forEach((d) => {
        ctx.beginPath();
        ctx.arc(d.x, d.y, d.r, 0, Math.PI * 2);
        ctx.fill();
        d.y -= 0.5;
        if (d.y < 0) d.y = canvas.height;
      });
      requestAnimationFrame(draw);
    }
    draw();
  </script>

  <style is="global">
    @keyframes fade {
      0%,
      33% {
        opacity: 0;
      }
      5%,
      28% {
        opacity: 1;
      }
      30%,
      100% {
        opacity: 0;
      }
    }
    .animate-fade {
      animation: fade 15s ease-in-out infinite both;
    }
    @keyframes float-slow {
      0% {
        transform: translateY(0);
      }
      100% {
        transform: translateY(-120vh);
      }
    }
    .animate-float-slow {
      animation: float-slow 25s linear infinite;
    }
    @keyframes float-medium {
      0% {
        transform: translateY(0);
      }
      100% {
        transform: translateY(-120vh);
      }
    }
    .animate-float-medium {
      animation: float-medium 20s linear infinite;
    }
    @keyframes float-fast {
      0% {
        transform: translateY(0);
      }
      100% {
        transform: translateY(-120vh);
      }
    }
    .animate-float-fast {
      animation: float-fast 15s linear infinite;
    }
    @media (prefers-reduced-motion: reduce) {
      .animate-fade,
      .animate-float-slow,
      .animate-float-medium,
      .animate-float-fast {
        animation: none !important;
      }
    }
  </style>
</section>
